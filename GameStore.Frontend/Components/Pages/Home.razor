@page "/"
@inject GamesClient Client

@* -->injecting the attribute *@
@attribute [StreamRendering]

<PageTitle>Game Calatog</PageTitle>

<div class="mt-2">
    <a class="btn btn-primary" role="button" href="/editgame">New Game</a>
</div>

@* displays this block while the data is loading *@
@if(games is null)  
{
    <p><em>Loading...</em></p>
}

@* displays this block when the data got loaded *@
else{
    <table class="table table-striped table-bordered table-hover mt-3">
        <thead class="table-dark">
            <tr>
                <th>Id</th>
                <th>Name</th>
                <th>Genre</th>
                <th class="text-end">Price</th>
                <th>Release Date</th>
                <th></th>
            </tr>
        </thead>
        <tbody>
            @foreach (var game in games) {
                <tr>
                    <td>@game.id</td>
                    <td>@game.name</td>
                    <td>@game.genre</td>
                    <td class="text-end">@game.price.ToString("C2")</td>
                    <td>@game.releaseDate</td>
                    <td>
                        <div class="d-flex">
                            <a class="btn brn-primary me-2" role="button" href="@GameUrl(game.id)">
                                <i class="bi bi-pencil"></i>
                            </a>
                            <button class="btn btn-danger"
                             data-bs-toggle="modal" 
                             data-bs-target="@GetDeleteModalId(game)">
                                <i class="bi bi-x-square"></i>
                             </button>
                        </div>
                        <DeleteGame Game="@game" />
                    </td>
                </tr>
            }
        </tbody>
    </table>
}

@code {
    private GameSummary[]? games;

    //function used to render component
    protected override async Task OnInitializedAsync() 
    {
        games = await Client.GetGamesAsync();
    }

    private static string GameUrl(int id) => $"/editgame/{id}";

    private string GetDeleteModalId(GameSummary game)
    {
        return $"#{DeleteGame.GetModalId(game)}";
    }
}

    
